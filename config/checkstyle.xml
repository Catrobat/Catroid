<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Catroid: An on-device visual programming system for Android devices
  ~ Copyright (C) 2010-2015 The Catrobat Team
  ~ (<http://developer.catrobat.org/credits>)
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ An additional term exception under section 7 of the GNU Affero
  ~ General Public License, version 3, is available at
  ~ http://developer.catrobat.org/license_additional_term
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
  <property name="charset" value="UTF-8" />
  <property name="severity" value="warning" />

  <module name="TreeWalker">
    <property name="tabWidth" value="1" />

    <!-- To enable SuppressWithNearbyCommentFilter -->
    <module name="FileContentsHolder" />

    <!-- Annotations -->
    <module name="AnnotationLocation">
      <property name="allowSamelineMultipleAnnotations" value="false" />
      <property name="allowSamelineSingleParameterlessAnnotation" value="false" />
      <property name="allowSamelineParameterizedAnnotation" value="false" />
    </module>
    <module name="MissingOverride" />
    <module name="SuppressWarnings" />

    <!-- Blocks -->
    <module name="AvoidNestedBlocks" />
    <module name="EmptyBlock" />
    <module name="EmptyCatchBlock">
      <property name="commentFormat" value="This is expected" />
      <property name="exceptionVariableName" value="expected|ignore|ok" />
    </module>
    <module name="LeftCurly">
      <property name="maxLineLength" value="9999" />
    </module>
    <module name="NeedBraces" />
    <module name="RightCurly" />
    <module name="RightCurly">
      <property name="option" value="alone" />
      <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT" />
    </module>

    <!-- Coding -->
    <module name="CovariantEquals" />
    <module name="DefaultComesLast" />
    <module name="EmptyStatement" />
    <module name="EqualsHashCode" />
    <module name="FallThrough" />
    <module name="IllegalInstantiation">
      <property name="classes" value="
          java.lang.Boolean,
          java.lang.Byte,
          java.lang.Character,
          java.lang.Double,
          java.lang.Float,
          java.lang.Integer,
          java.lang.Long,
          java.lang.Short,
          java.lang.String" />
    </module>
    <module name="MultipleVariableDeclarations" />
    <module name="NoFinalizer" />
    <module name="OneStatementPerLine" />
    <module name="SimplifyBooleanExpression" />
    <module name="SimplifyBooleanReturn" />
    <module name="StringLiteralEquality" />
    <module name="SuperFinalize" />

    <!-- Design -->
    <module name="FinalClass" />
    <module name="HideUtilityClassConstructor" />
    <module name="InterfaceIsType" />
    <module name="MutableException" />
    <module name="OneTopLevelClass" />

    <!-- Miscellaneous -->
    <module name="ArrayTypeStyle" />
    <module name="AvoidEscapedUnicodeCharacters" />
    <module name="Indentation">
      <property name="basicOffset" value="1" />
      <property name="braceAdjustment" value="0" />
      <property name="caseIndent" value="1" />
      <property name="throwsIndent" value="2" />
      <property name="lineWrappingIndentation" value="2" />
      <property name="arrayInitIndent" value="1" />
    </module>
    <module name="OuterTypeFilename" />
    <module name="UpperEll" />

    <!-- Modifiers -->
    <module name="ModifierOrder">
      <message key="mod.order" value="{0}'' modifier out of order with the JLS suggestions" />
    </module>
    <module name="RedundantModifier" />

    <!-- Naming -->
    <module name="ClassTypeParameterName">
      <message key="name.invalidPattern" value="Class type parameter not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="TypeName">
      <message key="name.invalidPattern" value="Class name not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="TypeName">
      <property name="format" value="^(?!I[A-Z])[A-Z][a-zA-Z0-9]*$" />
      <property name="tokens" value="INTERFACE_DEF" />
      <message key="name.invalidPattern" value="Interface name not following naming convention and shouldn't have a preceding I - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
      <message key="name.invalidPattern" value="Package name not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="ParameterName">
      <message key="name.invalidPattern" value="Parameter name not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="StaticVariableName">
      <property name="format" value="^(([a-z]{2})|([x-z][A-Z]))[a-zA-Z0-9]*$" />
      <message key="name.invalidPattern" value="Static member variable not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="MethodTypeParameterName">
      <message key="name.invalidPattern" value="Method type parameter not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="MethodName">
      <message key="name.invalidPattern" value="Method name not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="MemberName">
      <property name="format" value="^(([a-z]{2})|([x-z][A-Z]))[a-zA-Z0-9]*$" />
      <message key="name.invalidPattern" value="Member name not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="LocalVariableName">
      <message key="name.invalidPattern" value="Local variable name not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="LocalFinalVariableName">
      <message key="name.invalidPattern" value="Local final variable name not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="ConstantName">
      <message key="name.invalidPattern" value="Constant name not following naming convention - Name ''{0}'' must match pattern ''{1}''." />
    </module>
    <module name="AbbreviationAsWordInName">
      <property name="allowedAbbreviations" value="UUID" />
    </module>

    <!-- Package and Imports -->
    <module name="AvoidStarImport">
      <property name="excludes" value="junit.framework.Assert" />
    </module>
    <module name="ImportOrder">
      <property name="option" value="bottom" />
      <property name="groups" value="android,com,cucumber,edu,junit,net,org,java,javax" />
      <property name="ordered" value="true" />
      <property name="separated" value="true" />
    </module>
    <module name="RedundantImport" />
    <module name="PackageDeclaration" />
    <module name="UnusedImports" />

    <!-- Whitespace -->
    <module name="EmptyForInitializerPad" />
    <module name="EmptyForIteratorPad">
      <property name="option" value="space" />
    </module>
    <module name="GenericWhitespace" />
    <module name="MethodParamPad" />
    <module name="NoLineWrap" />
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS, ARRAY_DECLARATOR" />
    </module>
    <module name="NoWhitespaceBefore" />
    <module name="OperatorWrap" />
    <module name="ParenPad" />
    <module name="SeparatorWrap">
      <property name="tokens" value="DOT" />
      <property name="option" value="nl" />
    </module>
    <module name="SeparatorWrap">
      <property name="tokens" value="COMMA" />
      <property name="option" value="EOL" />
    </module>
    <module name="TypecastParenPad" />
    <module name="WhitespaceAfter" />
    <module name="WhitespaceAround" />
    
    <module name="RegexpSinglelineJava">
      <property name="format" value="^\t* " />
      <property name="ignoreComments" value="true" />
      <property name="message" value="Spaces aren't allowed for indentation. Tabs only" />
    </module>
  </module>

  <module name="NewlineAtEndOfFile">
    <property name="fileExtensions" value="java" />
    <property name="lineSeparator" value="lf_cr_crlf" />
  </module>
  <module name="UniqueProperties" />

  <module name="RegexpHeader">
    <property name="headerFile" value="catroidSourceTest/res/agpl_license_text.txt" />
    <property name="fileExtensions" value="java,xml" />
    <property name="multiLines" value="1,2" />
  </module>

  <module name="RegexpSingleline">
    <property name="format" value="(\uFFFC|\uFFFD|\uFFFF)" />
    <property name="message" value="Remove illegal block character FFFC, FFFD or FFFF." />
  </module>

  <module name="RegexpSingleline">
    <property name="format" value="^\s*\*\s*@author" />
    <property name="message" value="Remove author from the comment." />
  </module>

  <module name="RegexpMultiline">
    <property name="fileExtensions" value="java" />
    <property name="format" value=".\n{2,}\s*\}" />
    <property name="message" value="Next line is an unnecessary newline" />
  </module>

  <module name="RegexpMultiline">
    <property name="fileExtensions" value="java" />
    <property name="format" value=".\n{3,}" />
    <property name="message" value="Maximum of blank lines is 1" />
  </module>

  <module name="RegexpSingleline">
    <property name="fileExtensions" value="java" />
    <property name="format" value="^\s+$" />
    <property name="message" value="Empty line contains whitespaces." />
  </module>

  <module name="SuppressWithNearbyCommentFilter">
    <property name="commentFormat" value="CHECKSTYLE DISABLE ([\w\|]+) FOR (-?\d+) LINES" />
    <property name="checkFormat" value="$1" />
    <property name="influenceFormat" value="$2" />
  </module>

</module>
