/*
 * Catroid: An on-device visual programming system for Android devices
 * Copyright (C) 2010-2022 The Catrobat Team
 * (<http://developer.catrobat.org/credits>)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * An additional term exception under section 7 of the GNU Affero
 * General Public License, version 3, is available at
 * http://developer.catrobat.org/license_additional_term
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

plugins {
    id 'com.android.dynamic-feature'
    id 'kotlin-android'
}

repositories {
    maven { url "https://jitpack.io" }
}

android {
    compileSdkVersion 30

    ndkVersion "21.4.7075529"

    defaultConfig {
        applicationId "org.catrobat.catroidfeature.machinelearning"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        catroid {
            dimension "default"
        }
        createAtSchool {
            dimension "default"
        }
        embroideryDesigner {
            dimension "default"
        }
        lunaAndCat {
            dimension "default"
        }
        phiro {
            dimension "default"
        }
        pocketCodeBeta {
            dimension "default"
        }
        mindstorms {
            dimension "default"
        }
        standalone {
            dimension "default"
        }
    }

    aaptOptions {
        noCompress "lite"
    }
}

dependencies {
    implementation project(":catroid")
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'com.google.mlkit:playstore-dynamic-feature-support:16.0.0-beta2'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.0"

    // ML kit
    implementation 'com.google.mlkit:pose-detection:17.0.0'
    implementation 'com.google.android.gms:play-services-mlkit-face-detection:17.0.0'
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.0'
    implementation 'com.google.mlkit:object-detection:17.0.0'
    implementation 'com.google.mlkit:language-id:17.0.3'

    // HUAWEI Mobile Services
    implementation 'com.huawei.hms:base:4.0.3.300'

    // Huawei ML Kit
    implementation 'com.huawei.hms:ml-computer-voice-asr-plugin:2.2.0.300'
    implementation 'com.huawei.hms:ml-computer-voice-asr:2.2.0.300'
    implementation 'com.huawei.hms:ml-computer-vision-face:2.0.5.300'
    implementation 'com.huawei.hms:ml-computer-voice-tts:2.2.0.300'
    implementation 'com.huawei.hms:ml-computer-vision-ocr:2.0.5.301'
    implementation 'com.huawei.hms:ml-computer-language-detection:2.2.0.300'
    implementation 'com.huawei.hms:ml-computer-vision-skeleton:2.0.4.300'

    // CameraX
    implementation "androidx.camera:camera-camera2:1.0.0-beta07"
    implementation "androidx.camera:camera-lifecycle:1.0.0-beta07"

    // Gdx
    implementation "com.badlogicgames.gdx:gdx:1.9.10"
    implementation "com.badlogicgames.gdx:gdx-backend-android:1.9.10"

    // NOTE: tests files of the this feature module will throw a NoClassDefFoundError error on
    // runtime if we do not include this line
    // https://stackoverflow.com/questions/56766795/noclassdeffounderror-when-running-unit-test-with-gradle-task
    // https://github.com/android/app-bundle-samples/issues/11
    testRuntimeOnly(files("$projectDir/../catroid/build/intermediates/app_classes/catroidDebug/classes.jar"))
}
